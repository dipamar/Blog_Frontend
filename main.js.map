{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blog-about/blog-about.component.css","webpack:///./src/app/blog-about/blog-about.component.html","webpack:///./src/app/blog-about/blog-about.component.ts","webpack:///./src/app/blog-create/blog-create.component.css","webpack:///./src/app/blog-create/blog-create.component.html","webpack:///./src/app/blog-create/blog-create.component.ts","webpack:///./src/app/blog-edit/blog-edit.component.css","webpack:///./src/app/blog-edit/blog-edit.component.html","webpack:///./src/app/blog-edit/blog-edit.component.ts","webpack:///./src/app/blog-service.service.ts","webpack:///./src/app/blog-view/blog-view.component.css","webpack:///./src/app/blog-view/blog-view.component.html","webpack:///./src/app/blog-view/blog-view.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".header{\\r\\n    background-color: #04192E;\\r\\n    display: block;\\r\\n    padding: 3%;\\r\\n    color: white;\\r\\n    font-size: 26px;\\r\\n}\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row header\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h1>\\n          <a style=\\\"color: white\\\">{{title}}</a>\\n        </h1>\\n      </div>\\n    </div>\\n    <nav class=\\\"navbar navbar-default\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\"\\n            aria-expanded=\\\"false\\\">\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n          </button>\\n        </div>\\n\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n          <ul class=\\\"nav navbar-nav\\\">\\n            <!-- Router link tag need to be written it is special extension of angular n68e90-->\\n            <li>\\n              <a [routerLink]=\\\"['/home']\\\">Home</a>\\n            </li>\\n            <li>\\n              <a [routerLink]=\\\"['/create']\\\">Post a blog</a>\\n            </li>\\n            <li>\\n              <a [routerLink]=\\\"['/about']\\\">About</a>\\n            </li>\\n\\n          </ul>\\n        </div>\\n      </div>\\n    </nav>\\n  </div>\\n  <router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular Blog App';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n/*added HttpClientModule to slove problem of \nERROR Error: Uncaught (in promise): Error: StaticInjectorError(AppModule)[BlogHttpService -> HttpClient]: \n StaticInjectorError(Platform: core)[BlogHttpService -> HttpClient]: \n   NullInjectorError: No provider for HttpClient!\nError: StaticInjectorError(AppModule)[BlogHttpService -> HttpClient]: \n StaticInjectorError(Platform: core)[BlogHttpService -> HttpClient]: \n   NullInjectorError: No provider for HttpClient!\n*/\nimport { HttpClientModule } from '@angular/common/http';\n\n//import FormsModule \nimport {FormsModule} from '@angular/forms'\n//router module used for setting up the application lever route //n68e90\nimport { RouterModule, Routes } from '@angular/Router';\n\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { BlogViewComponent } from './blog-view/blog-view.component';\nimport { BlogCreateComponent } from './blog-create/blog-create.component';\nimport { BlogEditComponent } from './blog-edit/blog-edit.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { BlogAboutComponent } from './blog-about/blog-about.component';\n\n//import statement for a service\nimport { BlogServiceService } from './blog-service.service';\nimport { HttpService } from './http.service';\n//importing BrowserAnimationsModule for the toast msgs\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from '../../node_modules/ngx-toastr';\n//decorators \n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BlogViewComponent,\n    BlogCreateComponent,\n    BlogEditComponent,\n    NotFoundComponent,\n    BlogAboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    ToastrModule.forRoot(),\n    /*added HttpClientModule to slove problem HttpClientModule search in code */\n    HttpClientModule,\n    FormsModule,\n    //routerModule forRoot method to declare the possible routes in application //n68e90\n    RouterModule.forRoot([\n      { path: 'home', component: HomeComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      { path: 'about', component: BlogAboutComponent },\n      // this is the route parameter blog/:blogId (syntax -- routeName/: nameOftheVariable we will pass it from the home here we are collecting it \n      { path: 'blog/:blogId', component: BlogViewComponent },\n      { path: 'create', component: BlogCreateComponent },\n      { path: 'edit/:blogId', component: BlogEditComponent },\n      { path: '**', component: NotFoundComponent },\n    ])\n  ],\n  //here we have to add a service     n68e90 MAke a entry of service class into the provider Array\n  providers: [BlogServiceService, HttpService],\n  bootstrap: [AppComponent]     //this the shell page \n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  blog-about works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blog-about',\n  templateUrl: './blog-about.component.html',\n  styleUrls: ['./blog-about.component.css']\n})\nexport class BlogAboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".ng-valid[required], .ng-valid.required{\\r\\nborder-left: 5px solid green;\\r\\n}\\r\\n.ng-invalid:not(form){\\r\\n    border-left: 5px solid red;\\r\\n    }\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" style=\\\"text-align: left\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <form #createBlogForm=\\\"ngForm\\\" (ngSubmit)=\\\"createBlog()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Blog Title</label>\\n          <input type=\\\"text\\\" name=\\\"blogTitle\\\" [(ngModel)]=\\\"blogTitle\\\" #title=\\\"ngModel\\\" class=\\\"form-control\\\" placeholder=\\\"Enter the title\\\"\\n            required>\\n        </div>\\n        <div [hidden]=\\\"title.valid || title.pristine\\\" class=\\\"alert alert-danger\\\">\\n          Blog tilte is required\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Description</label>\\n          <input type=\\\"text\\\" name=\\\"blogDescription\\\" [(ngModel)]=\\\"blogDescription\\\" #description=\\\"ngModel\\\" class=\\\"form-control\\\" placeholder=\\\"Enter the Description\\\"\\n            required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Enter the Blog Body</label>\\n          <!-- name and [(ngModel)] must be same and it is the name of the component class field\\n                  #title is a way to give altername name to the model see how we used it after that\\n                  -->\\n          <input type=\\\"textarea\\\" name=\\\"blogBodyHtml\\\" [(ngModel)]=\\\"blogBodyHtml\\\" #blogBody=\\\"ngModel\\\" class=\\\"form-control\\\" rows=\\\"3\\\" placeholder=\\\"Enter the blog Body\\\"\\n            required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Category</label>\\n          <select name=\\\"blogCategory\\\" [(ngModel)]=\\\"blogCategory\\\" #category=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"category\\\" required>\\n            <!-- When something selected from the drowdown that comes in the [value] =\\\"category\\\" and then\\n                      that value is stored int the blogCategory which is the original Model\\n                      because we created binding here it is like ... name=\\\"blogCategory\\\"  #category=\\\"ngModel\\\" - we have given name category to the Model\\n                      and we have assigned selected value to the category in [value] =\\\"category\\\"\\n                      -->\\n            <option *ngFor=\\\"let category of blogPossibleCategories\\\" [value]=\\\"category\\\">{{category}}</option>\\n          </select>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!createBlogForm.valid\\\">\\n          Post the Blog\\n        </button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { HttpService } from '../http.service';\n// below imports are for routing to the blog view after entering a blog\nimport { ActivatedRoute, Router } from '../../../node_modules/@angular/Router';\nimport { ToastrService } from '../../../node_modules/ngx-toastr';\n\n\n@Component({\n  selector: 'app-blog-create',\n  templateUrl: './blog-create.component.html',\n  styleUrls: ['./blog-create.component.css']\n})\nexport class BlogCreateComponent implements OnInit {\n  public blogTitle: string;\n  public blogBodyHtml: string;\n  public blogDescription: string;\n  public blogCategory: string;\n  public blogPossibleCategories = [`Comedy`, `Action`, `Drama`, `Technology`];\n  constructor(private httpService: HttpService, private _route: ActivatedRoute, private router: Router, private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n  }\n\n  public createBlog(): any {\n    console.log(\"called createBlog of create class\");\n    let blogData = {\n      title: this.blogTitle,\n      description: this.blogDescription,\n      blogBody: this.blogBodyHtml,\n      category: this.blogCategory,\n    }//end bolgData\n    console.log(\"printing in create class\");\n    console.log(blogData);\n    this.httpService.createBlog(blogData).subscribe(\n      data => {\n        console.log(`blog created`);\n        // this.toastr.success('Blog is created successfully!', 'Success!');\n        this.toastr.success('Blog is created successfully!', 'Success', {\n          timeOut: 1000,\n          positionClass:'toast-top-right'\n        });\n        //alert(`Blog is created successfully`);\n        console.log(data);\n        setTimeout(() => {\n          this.router.navigate(['/blog', data.data.blogId]);\n        }, 1500);\n      },\n      error => {\n        console.log(`Some error occured in Create`);\n        console.log(error.errorMessageg);\n        this.toastr.error('Sorry!!some error occured', 'Oops!', {\n          timeOut: 1000,\n          positionClass:'toast-top-right'\n        });\n\n        //alert(`Sorry!!some error occured`);\n      }\n    );\n  }//end of createBlog Method\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\" style=\\\"text-align: left\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <form #createBlogForm=\\\"ngForm\\\" (ngSubmit)=\\\"editThisBlog()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Blog Title</label>\\n            <input type=\\\"text\\\" name=\\\"blogTitle\\\" [(ngModel)]=\\\"currentBlog.title\\\" #title=\\\"ngModel\\\" class=\\\"form-control\\\" placeholder=\\\"Enter the title\\\"\\n              required>\\n          </div>\\n          <div [hidden]=\\\"title.valid || title.pristine\\\" class=\\\"alert alert-danger\\\">\\n            Blog tilte is required\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Description</label>\\n            <input type=\\\"text\\\" name=\\\"blogDescription\\\" [(ngModel)]=\\\"currentBlog.description\\\" #description=\\\"ngModel\\\" class=\\\"form-control\\\" placeholder=\\\"Enter the Description\\\"\\n              required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Enter the Blog Body</label>\\n            <!-- name and [(ngModel)] must be same and it is the name of the component class field\\n                    #title is a way to give altername name to the model see how we used it after that\\n                    -->\\n            <input type=\\\"textarea\\\" name=\\\"blogBodyHtml\\\" [(ngModel)]=\\\"currentBlog.bodyHtml\\\" #blogBody=\\\"ngModel\\\" class=\\\"form-control\\\" rows=\\\"3\\\" placeholder=\\\"Enter the blog Body\\\"\\n              required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Category</label>\\n            <select name=\\\"blogCategory\\\" [(ngModel)]=\\\"currentBlog.category\\\" #category=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"category\\\" required>\\n              <!-- When something selected from the drowdown that comes in the [value] =\\\"category\\\" and then\\n                        that value is stored int the blogCategory which is the original Model\\n                        because we created binding here it is like ... name=\\\"blogCategory\\\"  #category=\\\"ngModel\\\" - we have given name category to the Model\\n                        and we have assigned selected value to the category in [value] =\\\"category\\\"\\n                        -->\\n              <option *ngFor=\\\"let category of blogPossibleCategories\\\" [value]=\\\"category\\\">{{category}}</option>\\n            </select>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!createBlogForm.valid\\\">\\n            Edit the Blog\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { HttpService } from '../http.service';\n// below imports are for routing to the blog view after entering a blog\nimport { ActivatedRoute, Router } from '../../../node_modules/@angular/Router';\nimport { ToastrService } from '../../../node_modules/ngx-toastr';\n\n@Component({\n  selector: 'app-blog-edit',\n  templateUrl: './blog-edit.component.html',\n  styleUrls: ['./blog-edit.component.css']\n})\nexport class BlogEditComponent implements OnInit {\n\n  public blogPossibleCategories = [`Comedy`, `Action`, `Drama`, `Technology`];\n  public currentBlog;\n  constructor(private httpService: HttpService, private _route: ActivatedRoute, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    //getting the blogId from Route\n    let myBlogId = this._route.snapshot.paramMap.get('blogId');\n    console.log(myBlogId);\n    //getting the blogdetails from the service\n    this.httpService.getSingleBlogInformation(myBlogId).subscribe(\n      data => {\n        this.currentBlog = data[\"data\"];\n        console.log(data);\n      },\n      error => {\n        console.log(`Some error occured in View`);\n        console.log(error.errorMessageg);\n      }\n    );\n    console.log(this.currentBlog);\n  }\n\n  public editThisBlog(): any {\n    console.log(`blog edit called`);\n    this.httpService.editBlog(this.currentBlog.blogId, this.currentBlog).subscribe(\n      data => {\n        console.log(`blog edited`);\n        this.toastr.success('Blog is edited successfully!', 'Success', {\n          timeOut: 1000,\n          positionClass: 'toast-top-right'\n        });\n        //alert(`Blog is created successfully`);\n        console.log(data);\n        setTimeout(() => {\n          this.router.navigate(['/blog', this.currentBlog.blogId]);\n        }, 1500);\n      },\n      error => {\n        console.log(`Some error occured in delete`);\n        console.log(error.errorMessageg);\n        this.toastr.error('Sorry!!some error occured during edit', 'Oops!', {\n          timeOut: 1000,\n          positionClass: 'toast-top-right'\n        });\n      }\n    );\n  }\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogServiceService {\n  public currentBlog:any;\n  //declare a dummy blogg variabale here\npublic allBlogs = [\n  {\n    \"blogId\" : \"1\",\n    \"lastModified\" :  \"2018-12-07T12:20:47\",\n    \"created\" :  \"2018-10-08T11:20:47\",\n    \"tags\" : [],\n    \"author\" : \"Amardip\",\n    \"category\": \"Comedy\",\n    \"isPublished\" : true,\n    \"views\" : 0,\n    \"bodyHtml\" : \"This is the body for first blog\",\n    \"description\" : \"Here is the description for first blog\",\n    \"title\" : \"The first blog\"\n  },\n  {\n    \"blogId\" : \"2\",\n    \"lastModified\" :  \"2017-12-07T12:20:47\",\n    \"created\" :  \"2017-10-08T11:20:47\",\n    \"tags\" : [],\n    \"author\" : \"Madhu\",\n    \"category\": \"Horror\",\n    \"isPublished\" : true,\n    \"views\" : 0,\n    \"bodyHtml\" : \"This is the body for second blog\",\n    \"description\" : \"Here is the description for second blog\",\n    \"title\" : \"The second blog\"\n  },\n  {\n    \"blogId\" : \"3\",\n    \"lastModified\" :  \"2016-12-07T12:20:47\",\n    \"created\" :  \"2016-10-08T11:20:47\",\n    \"tags\" : [],\n    \"author\" : \"Dip\",\n    \"category\": \"Comedy\",\n    \"isPublished\" : true,\n    \"views\" : 0,\n    \"bodyHtml\" : \"This is the body for third blog\",\n    \"description\" : \"Here is the description for third blog\",\n    \"title\" : \"The third blog\"\n  }\n];\n  constructor() { \n    console.log(\"service consturctor is called\");\n  }\n\n  public getAllBlogs():any{\n    return this.allBlogs;\n  }\n\n  public getSingleBlogInformation(currentBlogId):any{\n    for(let blog of this.allBlogs){\n      if(blog.blogId==currentBlogId)\n      this.currentBlog = blog;\n      return this.currentBlog;\n    }\n  }//end of getSingleBlogInformation function\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <!--use ngIf in all the row div before using the variable otherwise app may crasf-->\\n  <div class=\\\"row\\\" *ngIf=\\\"currentBlog\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>{{currentBlog.title}}</h2>\\n      <small>Blog number {{currentBlog.blogId}}</small>\\n      <p>Posted by {{currentBlog.author}} On {{currentBlog.created | date}}</p>\\n      <p *ngIf=\\\"currentBlog.tags.length>0 && currentBlog.tags.length !=undefined\\\">Tags :\\n        <span *ngFor=\\\"let tag of currentBlog.tags;let first=first;let last=last\\\">{{tag}}{{last ? '' : ', '}}</span>\\n      </p>\\n      <hr>\\n      <!--to render html as well use below it expecting bodyHtml variable with some html tags see blog id 3-->\\n      <div [innerHtml]=\\\"currentBlog.bodyHtml\\\"></div>\\n      <hr>\\n      <h5>Category : {{currentBlog.category}}</h5>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\" *ngIf=\\\"currentBlog\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <!--Here we are using routerLink with parameter (syntax routername,propertyNameToPass-->\\n      <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/edit',currentBlog.blogId]\\\">Edit</a>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <a class=\\\"btn btn-danger\\\" (click) = \\\"deleteThisBlog()\\\"> Delete</a>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <a class=\\\"btn btn-warning\\\" (click) = \\\"goBackToPreviousPage()\\\">Go Back</a>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n// Route related code..this is to capture the value passed in the address bar\nimport { ActivatedRoute, Router } from '@angular/Router';\nimport { CompiledStylesheet } from '@angular/compiler';\nimport { BlogServiceService } from '../blog-service.service';\nimport { HttpService } from '../http.service';\nimport { ToastrService } from '../../../node_modules/ngx-toastr';\n\n//import location for goback kind of facility\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-blog-view',\n  templateUrl: './blog-view.component.html',\n  styleUrls: ['./blog-view.component.css'],\n  //include providers array here for goback facility\n  providers:[Location]\n})\nexport class BlogViewComponent implements OnInit {\n  public currentBlog;\n\n  //consturcor used to inject anything to the class as soon as it created--- keep in mind the access specifiers\n  constructor(private _route: ActivatedRoute, private router: Router, public blogServiceService: BlogServiceService, public httpService: HttpService, private toastr: ToastrService, private location : Location) {\n    console.log(`BlogServiceService constuctor called in view component`);\n  }\n\n  ngOnInit() {\n    //getting the blogId from Route\n    let myBlogId = this._route.snapshot.paramMap.get('blogId');\n    console.log(myBlogId)\n    //getting the blogdetails from the service\n    this.httpService.getSingleBlogInformation(myBlogId).subscribe(\n      data => {\n        this.currentBlog = data[\"data\"];\n        console.log(data);\n      },\n      error => {\n        console.log(`Some error occured in View`);\n        console.log(error.errorMessageg);\n      }\n    );\n    console.log(this.currentBlog);\n  }\n\n  /*\n  for blog-service\n    ngOnInit() {\n      //getting the blogId from Route\n      let myBlogId = this._route.snapshot.paramMap.get('blogId');\n      //getting the blogdetails from the service\n      this.currentBlog = this.blogServiceService.getSingleBlogInformation(myBlogId);\n      console.log(this.currentBlog);\n    }\n  */\n  public deleteThisBlog(): any {\n    console.log(`blog deleted called`);\n    this.httpService.deleteBlog(this.currentBlog.blogId).subscribe(\n      data => {\n        console.log(`blog deleted`);\n        this.toastr.success('Blog is deleted successfully!', 'Success', {\n          timeOut: 1000,\n          positionClass: 'toast-top-right'\n        });\n        //alert(`Blog is created successfully`);\n        console.log(data);\n        setTimeout(() => {\n          this.router.navigate(['/home']);\n        }, 1500);\n      },\n      error => {\n        console.log(`Some error occured in delete`);\n        console.log(error.errorMessageg);\n        this.toastr.error('Sorry!!some error occured', 'Oops!', {\n          timeOut: 1000,\n          positionClass: 'toast-top-right'\n        });\n      }\n    );\n  }\n\n  public goBackToPreviousPage():any{\n    this.location.back();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <div class=\\\"row\\\" style=\\\"text-align:center\\\">\\n    <div class=\\\"col-md-12\\\" style=\\\"font-size: 22px\\\">All Blogs\\n    </div>\\n    <br/>\\n    <br/>\\n    <br/>\\n  </div>\\n\\n  <div class=\\\"row\\\" style=\\\"text-align:center\\\" *ngIf=\\\" allBlogs.length>0\\\">\\n    <!---Give attension to the syntax-->\\n<!---\\n  Can't have multiple template bindings on one element. Use only one attribute prefixed with * (\\\"\\n    <div *ngFor=\\\"let blog of allBlogs \\\" class=\\\"col-md-4\\\" [ERROR ->]*ngIf=\\\" allBlogs.length>0\\\"\\n-->\\n    <div *ngFor=\\\"let blog of allBlogs \\\" class=\\\"col-md-6\\\" >\\n\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <div class=\\\"panel-heading\\\"> {{ blog.title | uppercase }}\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n            <p> {{ blog.description }} </p>\\n          </div>\\n          <div class=\\\"panel-footer\\\"> Posted On {{blog.created | date}}\\n            <br/> by {{blog.author}}\\n            <br/>\\n            <br/>\\n            <a [routerLink]=\\\"['/blog' , blog.blogId]\\\" class=\\\"btn btn-primary\\\">Read</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n//import statement for a service which we have created by cmd line and provided in app.module.ts\nimport { BlogServiceService } from '../blog-service.service';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public allBlogs: any;\n\n  // n68e90 wherever you want to use perticular service, there you have to created instance of that \n  // service class in a constuctor (dont use new keyward) so you can call all the methods and fields\n  // of the service using that object\n  constructor(public blogServiceService: BlogServiceService, public httpService: HttpService) {\n    console.log(`BlogServiceService constuctor called in home component`);\n  }\n  // for http service use suscribe method \n  ngOnInit() {\n    this.allBlogs = this.httpService.getAllBlogs().subscribe(\n      data => {\n        this.allBlogs = data[\"data\"];\n        console.log(data);\n      },\n      error => {\n        console.log(`Some error occured in Home`);\n        console.log(error.errorMessageg);\n      }\n    )\n  }\n  /*\n  // for blog-service\n    ngOnInit() {\n      this.allBlogs = this.blogServiceService.getAllBlogs();\n      console.log(this.allBlogs);\n    }\n  */\n}\n","import { Injectable } from '@angular/core';\n\n//import http client and httpErrorResponse\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n//import Observable first installed  rxjs-compat. by using npm install rxjs-compat --save.\nimport { Observable } from \"rxjs\";\nimport { catchError, tap } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  public currentBlog: any;\n  public allBlogs: any;\n  public baseUrl: string = `https://blogapp.edwisor.com/api/v1/blogs`;\n  public authKey: string = `ODlkN2FkOGYxZGE4OTAyMWE3OTg2YjUyNDllOTZiNGY3ZWFlZWE0M2YyMjIyY2I1MzcyYWEyMWJhYTFlZmNjMTZjYzA3ZDFjZDA4Nzk0MzFkNDdkYzI1YjE3OWMwOGM3NGZlYzI0NWI4N2JkZjExMTliZDJlNjhiZmZiNWJmM2QyYQ==`;\n\n  constructor(public _http: HttpClient) {\n    console.log(`http service constructor called`);\n  }\n\n  //some exception handling add this to all the service which are making http call.\n  private handleError(err:HttpErrorResponse){\n    console.log(`Handle error http call`);\n    console.log(err.message);\n    return Observable.throw(err.message);\n    \n  }\n\n  public getAllBlogs(): any {\n    let myResponse = this._http.get(`${this.baseUrl}/all?authToken=${this.authKey}`);\n    return myResponse;\n  }\n\n  public getSingleBlogInformation(currentBlogId:any): any {\n    let myResponse = this._http.get(`${this.baseUrl}/view/${currentBlogId}?authToken=${this.authKey}`);\n    console.log(`${this.baseUrl}/view/${this.currentBlog}?authToken=${this.authKey}`);\n    return myResponse;\n  }\n\n  public createBlog(blogData:any): any {\n    console.log(\"called createBlog of http.service\");\n    let myResponse = this._http.post(`${this.baseUrl}/create?authToken=${this.authKey}`,blogData);\n    return myResponse;\n  }\n  public deleteBlog(currentBlogId:any): any {\n    console.log(`blog deleted service called`);\n    console.log(currentBlogId);\n    let data ={};\n    let myResponse = this._http.post(`${this.baseUrl}/${currentBlogId}/delete?authToken=${this.authKey}`,data);\n    return myResponse;\n  }\n  public editBlog(currentBlogId:any, blogData:any): any {\n    let myResponse = this._http.post(`${this.baseUrl}/${currentBlogId}/edit?authToken=${this.authKey}`,blogData);\n    return myResponse;\n  }\n}","module.exports = \"\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}